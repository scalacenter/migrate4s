@import Main._
@import scalafix.Readme._
@sect{Configuration}
  Scalafix reads configuration from a file using
  @lnk("HOCON", "https://github.com/typesafehub/config")
  syntax.
  I recommend you put a file @code{.scalafix.conf} into the root directory of
  your project.

  @sect{rewrites}
    You can either run a pre-made that comes with scalafix or a custom rewrite
    that you write yourself.

    @sect{Pre-made rewrites}
      Available rewrites are listed in @sect.ref{Rewrites}.

      @config
        rewrites = [ExplicitImplicit] # No rewrites are run if empty.

    @sect{Custom rewrites}
      @config
        rewrites = [
          "file:readme/MyRewrite.scala" // from local file
          // from url
          "https://gist.githubusercontent.com/olafurpg/fc6f43a695ac996bd02000f45ed02e63/raw/5c71c5444174130531021c2c39b0b3ccef30ef00/ExampleRewrite.scala"
          // from fully qualified name on classpath
          "scala:scalafix.rewrite.ExplicitImplicit"
        ]

  @sect{imports}

    @b{NOTE.} This feature is new and may still have bugs that cause rewritten
    code to not compile. Please report back you bump into issues.

    @p
      Scalafix can organize imports.
      If you use import patches such as @code{Add/RemoveGlobalImport},
      you need to allow scalafix to organize you imports.
      To minimize the diff from import patches, it's best to run scalafix once
      with organize imports enabled and no zero patches.
      @config
        // Group and sort imports
        imports.organize = true
        // Example relative import: `import collection.immutable`
        // Expanded: `import scala.collection.immutable`
        imports.expandRelative = true
        // Removes global imports that -Ywarn-unused-import complains about
        // Requires sbt-scalafix/ScalafixMirror
        imports.removeUnused = true
        // Groups are separated by a blank line, example:
        // import com.a
        // import com.b
        //
        // import scala.collection.immutable._
        imports.groups = [
          "com.mycompany.*"
          "scala\\..*"
        ]
  @sect{patches}
    For simple use-cases, it's possible to write custom rewrites directly
    .scalafix.conf.
    @config
      patches.removeGlobalImports = [
        "scala.collection.mutable" # scala.meta.Importee
      ]
      patches.addGlobalImports = [
        "scala.collection.immutable"
      ]
      patches.replacements = [
        {
          from = "_root_.scala.Seq." // scala.meta.Symbol
          to = "Seq"
          additionalImports = [ "scala.collection.immutable.Seq" ]
        }
      ]
      // Helper to see which symbols appear in your source files
      debug.printSymbols = true
    For more advanced use-cases, I recommend you use @sect.ref{scalafix-core}
    as a library.

  @sect{All options}

    The following is the list of all available options along with their
    default values.
    @hl.scala(scalafix.config.Class2Hocon())

